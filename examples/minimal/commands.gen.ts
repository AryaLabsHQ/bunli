// This file was automatically generated by Bunli.
// You should NOT make any changes in this file as it will be overwritten.



/**
 * Map of command names to their command definitions
 * This provides type-safe access to all commands
 */
export interface CommandsByName {

}

// Augment @bunli/core with generated command types
declare module '@bunli/core' {
  interface RegisteredCommands extends CommandsByName {}
}

/**
 * Get command metadata by name (type-safe)
 */
export function getCommandApi<T extends keyof CommandsByName>(
  name: T
): CommandsByName[T] {
  return commandRegistry[name] as any
}

/**
 * Get all command names
 */
export function getCommandNames(): (keyof CommandsByName)[] {
  return Object.keys(commandRegistry) as (keyof CommandsByName)[]
}

/**
 * Check if a command exists
 */
export function hasCommand(name: string): name is keyof CommandsByName {
  return name in commandRegistry
}

/**
 * List all commands with metadata
 */
export function listCommands(): Array<{
  name: keyof CommandsByName
  description: string
  path: string
}> {
  return Object.values(commandRegistry)
}

// Runtime registry for command discovery
export const commandRegistry = {

} as const
